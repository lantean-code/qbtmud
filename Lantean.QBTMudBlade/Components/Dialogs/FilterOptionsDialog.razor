@typeparam T

<MudDialog ContentStyle="mix-width: 400px">
    <DialogContent>
        <MudGrid>
            @foreach (var definition in FilterDefinitions ?? [])
            {
                <MudItem xs="4">
                    <MudField Label="Column">@definition.Column</MudField>
                </MudItem>
                <MudItem xs="3">
                    <MudSelect Label="Operator" T="string" Value="@definition.Operator" ValueChanged="@(v => DefinitionOperatorChanged(definition, v))">
                        @foreach (var op in Filter.FilterOperator.GetOperatorByDataType(definition.ColumnType))
                        {
                            <MudSelectItem T="string" Value="op">@op</MudSelectItem>
                        }
                    </MudSelect>
                </MudItem>
                <MudItem xs="4">
                    <MudTextField Label="Value" T="object" Value="@definition.Value" ValueChanged="@(v => DefinitionValueChanged(definition, v))" />
                </MudItem>
                <MudItem xs="1">
                    <MudIconButton OnClick="@(e => RemoveDefinition(definition))" Icon="@Icons.Material.Outlined.Remove" />
                </MudItem>
                <MudDivider />
            }
            <MudItem xs="4">
                <MudSelect Label="Column" T="string" ValueChanged="ColumnChanged">
                    @foreach (var propertyName in GetAvailablePropertyNames())
                    {
                        <MudSelectItem T="string" Value="@propertyName" />
                    }
                </MudSelect>
            </MudItem>
            <MudItem xs="3">
                <MudSelect Label="Operator" T="string" ValueChanged="OperatorChanged">
                    @if (ColumnType is null)
                    {
                        <MudSelectItem T="string" Value="@("")">Please select a column.</MudSelectItem>
                    }
                    else
                    {
                        foreach (var op in Filter.FilterOperator.GetOperatorByDataType(ColumnType))
                        {
                            <MudSelectItem T="string" Value="op">@op</MudSelectItem>
                        }
                    }
                </MudSelect>
            </MudItem>
            <MudItem xs="4">
                <MudTextField Label="Value" T="string" ValueChanged="ValueChanged" />
            </MudItem>
            <MudItem xs="1">
                <MudIconButton OnClick="AddDefinition" Icon="@Icons.Material.Outlined.Add" />
            </MudItem>
        </MudGrid>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Save</MudButton>
    </DialogActions>
</MudDialog>